"use strict";
// Copyright 2021 The Casdoor Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.CertSDK = void 0;
class CertSDK {
    constructor(config, request) {
        this.config = config;
        this.request = request;
    }
    async getCerts() {
        if (!this.request) {
            throw new Error('request init failed');
        }
        return (await this.request.get('/get-certs', {
            params: {
                owner: this.config.orgName,
            },
        }));
    }
    async getCert(id) {
        if (!this.request) {
            throw new Error('request init failed');
        }
        return (await this.request.get('/get-cert', {
            params: {
                id: `${this.config.orgName}/${id}`,
            },
        }));
    }
    async modifyCert(method, cert) {
        if (!this.request) {
            throw new Error('request init failed');
        }
        const url = `/${method}`;
        cert.owner = this.config.orgName;
        return (await this.request.post(url, cert, {
            params: {
                id: `${cert.owner}/${cert.name}`,
            },
        }));
    }
    async addCert(cert) {
        return this.modifyCert('add-cert', cert);
    }
    async updateCert(cert) {
        return this.modifyCert('update-cert', cert);
    }
    async deleteCert(cert) {
        return this.modifyCert('delete-cert', cert);
    }
}
exports.CertSDK = CertSDK;
