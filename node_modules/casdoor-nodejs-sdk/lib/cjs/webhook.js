"use strict";
// Copyright 2021 The Casdoor Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebhookSDK = void 0;
class WebhookSDK {
    constructor(config, request) {
        this.config = config;
        this.request = request;
    }
    async getWebhooks() {
        if (!this.request) {
            throw new Error('request init failed');
        }
        return (await this.request.get('/get-webhooks', {
            params: {
                owner: this.config.orgName,
            },
        }));
    }
    async getWebhook(id) {
        if (!this.request) {
            throw new Error('request init failed');
        }
        return (await this.request.get('/get-webhook', {
            params: {
                id: `${this.config.orgName}/${id}`,
            },
        }));
    }
    async modifyWebhook(method, webhook) {
        if (!this.request) {
            throw new Error('request init failed');
        }
        const url = `/${method}`;
        webhook.owner = this.config.orgName;
        return (await this.request.post(url, webhook, {
            params: {
                id: `${webhook.owner}/${webhook.name}`,
            },
        }));
    }
    async addWebhook(webhook) {
        return this.modifyWebhook('add-webhook', webhook);
    }
    async updateWebhook(webhook) {
        return this.modifyWebhook('update-webhook', webhook);
    }
    async deleteWebhook(webhook) {
        return this.modifyWebhook('delete-webhook', webhook);
    }
}
exports.WebhookSDK = WebhookSDK;
