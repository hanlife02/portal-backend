import { AxiosResponse } from 'axios';
import { Config } from './config';
import Request from './request';
export interface Resource {
    owner: string;
    name: string;
    createdTime?: string;
    user?: string;
    provider?: string;
    application?: string;
    tag?: string;
    parent?: string;
    fileName?: string;
    fileType?: string;
    fileFormat?: string;
    fileSize?: number;
    url?: string;
    description?: string;
    fullFilePath?: string;
}
export declare class ResourceSDK {
    private config;
    private readonly request;
    constructor(config: Config, request: Request);
    uploadResource(resource: Resource, psotFile: any): Promise<AxiosResponse<Record<string, unknown>, any>>;
    getResources(owner: string, user: string, field: string, value: string, sortField: string, sortOrder: string): Promise<AxiosResponse<{
        data: Resource[];
    }, any>>;
    getResource(id: string): Promise<AxiosResponse<{
        data: Resource;
    }, any>>;
    modifyResource(method: string, resource: Resource): Promise<AxiosResponse<Record<string, unknown>, any>>;
    addResource(resource: Resource): Promise<AxiosResponse<Record<string, unknown>, any>>;
    updateResource(resource: Resource): Promise<AxiosResponse<Record<string, unknown>, any>>;
    deleteResource(resource: Resource): Promise<AxiosResponse<Record<string, unknown>, any>>;
}
