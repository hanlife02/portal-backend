// Copyright 2021 The Casdoor Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
export class EnforceSDK {
    constructor(config, request) {
        this.config = config;
        this.request = request;
    }
    async enforce(permissionId, modelId, resourceId, casbinRequest) {
        const response = await this.doEnforce('enforce', permissionId, modelId, resourceId, casbinRequest);
        const { data } = response.data;
        for (const isAllow of data) {
            if (isAllow) {
                return isAllow;
            }
        }
        return false;
    }
    async batchEnforce(permissionId, modelId, resourceId, casbinRequest) {
        const response = await this.doEnforce('batch-enforce', permissionId, modelId, resourceId, casbinRequest);
        const { data } = response.data;
        return data.flat(2);
    }
    async doEnforce(action, permissionId, modelId, resourceId, casbinRequest) {
        if (!this.request) {
            throw new Error('request init failed');
        }
        const url = `/${action}`;
        return (await this.request.post(url, casbinRequest, {
            params: {
                permissionId: permissionId,
                modelId: modelId,
                resourceId: resourceId,
            },
        }));
    }
}
