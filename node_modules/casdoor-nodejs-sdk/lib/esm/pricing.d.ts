import { AxiosResponse } from 'axios';
import { Config } from './config';
import Request from './request';
export interface Pricing {
    owner: string;
    name: string;
    createdTime: string;
    displayName: string;
    description: string;
    plans?: string[];
    isEnabled?: boolean;
    trialDuration?: number;
    application: string;
    submitter?: string;
    approver?: string;
    approveTime?: string;
    state?: string;
}
export declare class PricingSDK {
    private config;
    private readonly request;
    constructor(config: Config, request: Request);
    getPricings(): Promise<AxiosResponse<{
        data: Pricing[];
    }, any>>;
    getPricing(id: string): Promise<AxiosResponse<{
        data: Pricing;
    }, any>>;
    modifyPricing(method: string, pricing: Pricing): Promise<AxiosResponse<Record<string, unknown>, any>>;
    addPricing(pricing: Pricing): Promise<AxiosResponse<Record<string, unknown>, any>>;
    updatePricing(pricing: Pricing): Promise<AxiosResponse<Record<string, unknown>, any>>;
    deletePricing(pricing: Pricing): Promise<AxiosResponse<Record<string, unknown>, any>>;
}
