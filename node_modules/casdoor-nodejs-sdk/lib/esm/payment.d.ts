import { AxiosResponse } from 'axios';
import { Config } from './config';
import Request from './request';
export interface Payment {
    owner: string;
    name: string;
    createdTime: string;
    displayName: string;
    provider?: string;
    type?: string;
    productName: string;
    productDisplayName?: string;
    detail?: string;
    tag?: string;
    currency?: string;
    price?: number;
    returnUrl?: string;
    user?: string;
    personName?: string;
    personIdCard?: string;
    personEmail?: string;
    personPhone?: string;
    invoiceType?: string;
    invoiceTitle?: string;
    invoiceTaxId?: string;
    invoiceRemark?: string;
    invoiceUrl?: string;
    outOrderId?: string;
    payUrl?: string;
    state?: string;
    message?: string;
}
export declare class PaymentSDK {
    private config;
    private readonly request;
    constructor(config: Config, request: Request);
    getPayments(): Promise<AxiosResponse<{
        data: Payment[];
    }, any>>;
    getPayment(id: string): Promise<AxiosResponse<{
        data: Payment;
    }, any>>;
    modifyPayment(method: string, payment: Payment): Promise<AxiosResponse<Record<string, unknown>, any>>;
    addPayment(payment: Payment): Promise<AxiosResponse<Record<string, unknown>, any>>;
    updatePayment(payment: Payment): Promise<AxiosResponse<Record<string, unknown>, any>>;
    deletePayment(payment: Payment): Promise<AxiosResponse<Record<string, unknown>, any>>;
}
